{
  "artifacts": [],
  "command": "do_experiment",
  "experiment": {
    "base_dir": "/home/enterprise.internal.city.ac.uk/acvn728/MScFinalProject",
    "dependencies": [
      "numpy==1.15.4",
      "sacred==0.7.4",
      "tensorflow-gpu==1.8.0"
    ],
    "mainfile": "main.py",
    "name": "UNet_Speech_Separation",
    "repositories": [],
    "sources": [
      [
        "audio_models.py",
        "_sources/audio_models_440ee1602411291adf56a3ac99578719.py"
      ],
      [
        "dataset.py",
        "_sources/dataset_20f5331d613553a1d9af5429739bb5c9.py"
      ],
      [
        "main.py",
        "_sources/main_454bd357f73b86dc167b25d0065e3aea.py"
      ],
      [
        "train.py",
        "_sources/train_0ad1646a07bfc1615aa3cfd20d8f53d4.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1292, in _do_call\n    return fn(*args)\n",
    "  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1277, in _run_fn\n    options, feed_dict, fetch_list, target_list, run_metadata)\n",
    "  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1367, in _call_tf_sessionrun\n    run_metadata)\n",
    "tensorflow.python.framework.errors_impl.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [2] rhs shape= [4]\n\t [[{{node save/Assign_40}} = Assign[T=DT_FLOAT, _class=[\"loc:@Magnitude_Model/voice-mask-unet/decoder/layer-6/conv2d_transpose/bias\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Magnitude_Model/Magnitude_Model/voice-mask-unet/decoder/layer-6/conv2d_transpose/bias/Adam, save/RestoreV2/_81)]]\n",
    "\nDuring handling of the above exception, another exception occurred:\n\n",
    "Traceback (most recent call last):\n",
    "  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 1538, in restore\n    {self.saver_def.filename_tensor_name: save_path})\n",
    "  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 887, in run\n    run_metadata_ptr)\n",
    "  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1110, in _run\n    feed_dict_tensor, options, run_metadata)\n",
    "  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1286, in _do_run\n    run_metadata)\n",
    "  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1308, in _do_call\n    raise type(e)(node_def, op, message)\n",
    "tensorflow.python.framework.errors_impl.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [2] rhs shape= [4]\n\t [[{{node save/Assign_40}} = Assign[T=DT_FLOAT, _class=[\"loc:@Magnitude_Model/voice-mask-unet/decoder/layer-6/conv2d_transpose/bias\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Magnitude_Model/Magnitude_Model/voice-mask-unet/decoder/layer-6/conv2d_transpose/bias/Adam, save/RestoreV2/_81)]]\n\nCaused by op 'save/Assign_40', defined at:\n  File \"main.py\", line 67, in <module>\n    @ex.automain\n  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/experiment.py\", line 137, in automain\n    self.run_commandline()\n  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/experiment.py\", line 260, in run_commandline\n    return self.run(cmd_name, config_updates, named_configs, {}, args)\n  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/experiment.py\", line 209, in run\n    run()\n  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/run.py\", line 221, in __call__\n    self.result = self.main_function(*args)\n  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/config/captured_function.py\", line 46, in captured_function\n    result = wrapped(*args, **kwargs)\n  File \"main.py\", line 133, in do_experiment\n    restorer = tf.train.Saver()\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 1094, in __init__\n    self.build()\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 1106, in build\n    self._build(self._filename, build_save=True, build_restore=True)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 1143, in _build\n    build_save=build_save, build_restore=build_restore)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 787, in _build_internal\n    restore_sequentially, reshape)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 428, in _AddRestoreOps\n    assign_ops.append(saveable.restore(saveable_tensors, shapes))\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 119, in restore\n    self.op.get_shape().is_fully_defined())\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/state_ops.py\", line 221, in assign\n    validate_shape=validate_shape)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_state_ops.py\", line 61, in assign\n    use_locking=use_locking, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 3272, in create_op\n    op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1768, in __init__\n    self._traceback = tf_stack.extract_stack()\n\nInvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [2] rhs shape= [4]\n\t [[{{node save/Assign_40}} = Assign[T=DT_FLOAT, _class=[\"loc:@Magnitude_Model/voice-mask-unet/decoder/layer-6/conv2d_transpose/bias\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Magnitude_Model/Magnitude_Model/voice-mask-unet/decoder/layer-6/conv2d_transpose/bias/Adam, save/RestoreV2/_81)]]\n\n",
    "\nDuring handling of the above exception, another exception occurred:\n\n",
    "Traceback (most recent call last):\n",
    "  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/config/captured_function.py\", line 46, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"main.py\", line 134, in do_experiment\n    restorer.restore(sess, checkpoint)\n",
    "  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 1574, in restore\n    err, \"a mismatch between the current graph and the graph\")\n",
    "tensorflow.python.framework.errors_impl.InvalidArgumentError: Restoring from checkpoint failed. This is most likely due to a mismatch between the current graph and the graph from the checkpoint. Please ensure that you have not altered the graph expected based on the checkpoint. Original error:\n\nAssign requires shapes of both tensors to match. lhs shape= [2] rhs shape= [4]\n\t [[{{node save/Assign_40}} = Assign[T=DT_FLOAT, _class=[\"loc:@Magnitude_Model/voice-mask-unet/decoder/layer-6/conv2d_transpose/bias\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Magnitude_Model/Magnitude_Model/voice-mask-unet/decoder/layer-6/conv2d_transpose/bias/Adam, save/RestoreV2/_81)]]\n\nCaused by op 'save/Assign_40', defined at:\n  File \"main.py\", line 67, in <module>\n    @ex.automain\n  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/experiment.py\", line 137, in automain\n    self.run_commandline()\n  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/experiment.py\", line 260, in run_commandline\n    return self.run(cmd_name, config_updates, named_configs, {}, args)\n  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/experiment.py\", line 209, in run\n    run()\n  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/run.py\", line 221, in __call__\n    self.result = self.main_function(*args)\n  File \"/home/enterprise.internal.city.ac.uk/acvn728/.local/lib/python3.5/site-packages/sacred/config/captured_function.py\", line 46, in captured_function\n    result = wrapped(*args, **kwargs)\n  File \"main.py\", line 133, in do_experiment\n    restorer = tf.train.Saver()\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 1094, in __init__\n    self.build()\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 1106, in build\n    self._build(self._filename, build_save=True, build_restore=True)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 1143, in _build\n    build_save=build_save, build_restore=build_restore)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 787, in _build_internal\n    restore_sequentially, reshape)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 428, in _AddRestoreOps\n    assign_ops.append(saveable.restore(saveable_tensors, shapes))\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/saver.py\", line 119, in restore\n    self.op.get_shape().is_fully_defined())\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/state_ops.py\", line 221, in assign\n    validate_shape=validate_shape)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_state_ops.py\", line 61, in assign\n    use_locking=use_locking, name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 3272, in create_op\n    op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1768, in __init__\n    self._traceback = tf_stack.extract_stack()\n\nInvalidArgumentError (see above for traceback): Restoring from checkpoint failed. This is most likely due to a mismatch between the current graph and the graph from the checkpoint. Please ensure that you have not altered the graph expected based on the checkpoint. Original error:\n\nAssign requires shapes of both tensors to match. lhs shape= [2] rhs shape= [4]\n\t [[{{node save/Assign_40}} = Assign[T=DT_FLOAT, _class=[\"loc:@Magnitude_Model/voice-mask-unet/decoder/layer-6/conv2d_transpose/bias\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Magnitude_Model/Magnitude_Model/voice-mask-unet/decoder/layer-6/conv2d_transpose/bias/Adam, save/RestoreV2/_81)]]\n\n"
  ],
  "heartbeat": "2018-11-12T16:11:13.400343",
  "host": {
    "ENV": {},
    "cpu": "AMD Ryzen 7 1700 Eight-Core Processor",
    "gpus": {
      "driver_version": "396.44",
      "gpus": [
        {
          "model": "GeForce GTX 1080 Ti",
          "persistence_mode": false,
          "total_memory": 11177
        },
        {
          "model": "GeForce GTX 1080 Ti",
          "persistence_mode": false,
          "total_memory": 11178
        }
      ]
    },
    "hostname": "africa",
    "os": [
      "Linux",
      "Linux-4.15.0-36-generic-x86_64-with-Ubuntu-16.04-xenial"
    ],
    "python_version": "3.5.2"
  },
  "meta": {
    "command": "do_experiment",
    "options": {
      "--beat_interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print_config": false,
      "--priority": null,
      "--queue": false,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "model_config.data_type=mag_phase_real_imag",
        "model_config.checkpoint_to_load=191/191-8",
        "model_config.epochs=2"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2018-11-12T16:08:47.531216",
  "status": "FAILED",
  "stop_time": "2018-11-12T16:11:13.433496"
}