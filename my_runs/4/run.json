{
  "artifacts": [],
  "command": "do_experiment",
  "experiment": {
    "base_dir": "C:\\Users\\Toby\\MSc_Project\\MScFinalProject",
    "dependencies": [
      "mir-eval==0.4",
      "numpy==1.15.0",
      "sacred==0.7.4",
      "tensorflow==1.8.0"
    ],
    "mainfile": "Main.py",
    "name": "UNet_Speech_Separation",
    "repositories": [],
    "sources": [
      [
        "Audio_functions.py",
        "_sources\\Audio_functions_d40a36796e513d6a1f231dc38934ae2c.py"
      ],
      [
        "Dataset.py",
        "_sources\\Dataset_f37ad78d8a7530a76be9efd88181b006.py"
      ],
      [
        "Main.py",
        "_sources\\Main_37f4e618822d620fa1196c252b54da91.py"
      ],
      [
        "UNet.py",
        "_sources\\UNet_2dd1ab2b52260f79a03454be1b6d782b.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 46, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"C:\\Users\\Toby\\MSc_Project\\MScFinalProject\\Main.py\", line 238, in do_experiment\n    restorer.restore(sess, checkpoint)\n",
    "  File \"C:\\Users\\Toby\\MSc_Project\\MScFinalProject\\UNet.py\", line 14, in __init__\n    self.voice_mask_unet = UNet(mixed, is_training=is_training, reuse=False, name='voice-mask-unet')\n",
    "  File \"C:\\Users\\Toby\\MSc_Project\\MScFinalProject\\UNet.py\", line 34, in __init__\n    self.encoder = UNetEncoder(input_tensor, is_training, reuse)\n",
    "  File \"C:\\Users\\Toby\\MSc_Project\\MScFinalProject\\UNet.py\", line 46, in __init__\n    net = mf.conv(net, filters=16, kernel_size=5, stride=(2, 2))\n",
    "  File \"C:\\Users\\Toby\\MSc_Project\\MScFinalProject\\Model_functions.py\", line 12, in conv\n    strides=stride, padding='SAME')\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\convolutional.py\", line 621, in conv2d\n    return layer.apply(inputs)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\base.py\", line 828, in apply\n    return self.__call__(inputs, *args, **kwargs)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\base.py\", line 699, in __call__\n    self.build(input_shapes)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\convolutional.py\", line 144, in build\n    dtype=self.dtype)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\base.py\", line 546, in add_variable\n    partitioner=partitioner)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\checkpointable.py\", line 436, in _add_variable_with_custom_getter\n    **kwargs_for_getter)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\variable_scope.py\", line 1317, in get_variable\n    constraint=constraint)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\variable_scope.py\", line 1079, in get_variable\n    constraint=constraint)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\variable_scope.py\", line 425, in get_variable\n    constraint=constraint)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\variable_scope.py\", line 394, in _true_getter\n    use_resource=use_resource, constraint=constraint)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\variable_scope.py\", line 733, in _get_single_variable\n    name, \"\".join(traceback.format_list(tb))))\n",
    "ValueError: Variable U_Net_Model/voice-mask-unet/encoder/layer-1/conv2d/kernel already exists, disallowed. Did you mean to set reuse=True or reuse=tf.AUTO_REUSE in VarScope? Originally defined at:\n\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1718, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3392, in create_op\n    op_def=op_def)\n  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n\n"
  ],
  "heartbeat": "2018-07-24T16:51:01.374151",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i5-4200H CPU @ 2.80GHz",
    "hostname": "tobyspc",
    "os": [
      "Windows",
      "Windows-10-10.0.17134-SP0"
    ],
    "python_version": "3.6.1"
  },
  "meta": {
    "command": "do_experiment",
    "options": {
      "--beat_interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print_config": false,
      "--priority": null,
      "--queue": false,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2018-07-24T16:50:59.775324",
  "status": "FAILED",
  "stop_time": "2018-07-24T16:51:01.389140"
}