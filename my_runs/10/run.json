{
  "artifacts": [],
  "command": "do_experiment",
  "experiment": {
    "base_dir": "C:\\Users\\Toby\\MSc_Project\\MScFinalProject",
    "dependencies": [
      "mir-eval==0.4",
      "numpy==1.14.0",
      "sacred==0.7.4",
      "tensorflow==1.5.0"
    ],
    "mainfile": "Main.py",
    "name": "UNet_Speech_Separation",
    "repositories": [],
    "sources": [
      [
        "Audio_functions.py",
        "_sources\\Audio_functions_51c8f6c5bcb0d6102f1d2d59bfbf7919.py"
      ],
      [
        "Dataset.py",
        "_sources\\Dataset_d4e01a3259e94b26a4d64115527b82fb.py"
      ],
      [
        "Main.py",
        "_sources\\Main_0d23722f965b953f5d8cd76984e90e11.py"
      ],
      [
        "UNet.py",
        "_sources\\UNet_2dd1ab2b52260f79a03454be1b6d782b.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 46, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"C:/Users/Toby/MSc_Project/MScFinalProject/Main.py\", line 213, in do_experiment\n    model = UNet.UNetModel(mixed_mag, voice_mag, mixed_phase, is_training, name='U_Net_Model')\n",
    "  File \"C:/Users/Toby/MSc_Project/MScFinalProject\\UNet.py\", line 14, in __init__\n    self.voice_mask_unet = UNet(mixed, is_training=is_training, reuse=False, name='voice-mask-unet')\n",
    "  File \"C:/Users/Toby/MSc_Project/MScFinalProject\\UNet.py\", line 34, in __init__\n    self.encoder = UNetEncoder(input_tensor, is_training, reuse)\n",
    "  File \"C:/Users/Toby/MSc_Project/MScFinalProject\\UNet.py\", line 46, in __init__\n    net = mf.conv(net, filters=16, kernel_size=5, stride=(2, 2))\n",
    "  File \"C:/Users/Toby/MSc_Project/MScFinalProject\\Model_functions.py\", line 12, in conv\n    strides=stride, padding='SAME')\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\convolutional.py\", line 614, in conv2d\n    return layer.apply(inputs)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\base.py\", line 762, in apply\n    return self.__call__(inputs, *args, **kwargs)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\base.py\", line 629, in __call__\n    self._assert_input_compatibility(inputs)\n",
    "  File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\base.py\", line 1134, in _assert_input_compatibility\n    str(x.get_shape().as_list()))\n",
    "ValueError: Input 0 of layer conv2d_1 is incompatible with the layer: expected ndim=4, found ndim=3. Full shape received: [None, 256, 512]\n"
  ],
  "heartbeat": "2018-07-20T13:36:13.541990",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i5-4200H CPU @ 2.80GHz",
    "hostname": "tobyspc",
    "os": [
      "Windows",
      "Windows-10-10.0.17134-SP0"
    ],
    "python_version": "3.6.1"
  },
  "meta": {
    "command": "do_experiment",
    "options": {
      "--beat_interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print_config": false,
      "--priority": null,
      "--queue": false,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2018-07-20T13:36:02.804476",
  "status": "FAILED",
  "stop_time": "2018-07-20T13:36:13.583950"
}